h1. Vim

It is recommended that you use gVim in either Windows or Linux and MacVim for
Mac. Download from:

* (Windows) http://www.vim.org/download.php#pc (gvim73_46.exe)
* (Mac) https://github.com/b4winckler/macvim/downloads (snapshot-56)

h1. Bundled Plugins

* "Ack":http://www.vim.org/scripts/script.php?script_id=2572 - type :Ack [search pattern] to search your entire project
* "Align":http://www.vim.org/scripts/script.php?script_id=294 - align blocks of text using equal sign, make comment boxes and more
* "AutoJump":https://github.com/trotter/autojump.vim - Adds autojump support to vim
* "bufexplorer":http://www.vim.org/scripts/script.php?script_id=42 - manage your file buffers
* "buftabs":https://github.com/vim-scripts/buftabs - Minimalistic buffer tabs saving screen space
* "Command-T":http://www.vim.org/scripts/script.php?script_id=3025 - the fastest and most intuitive way for opening files in your project
* "cucumber":http://www.vim.org/scripts/script.php?script_id=2973 - support for cucumber features such as syntax highlight, indentation, etc
* "endwise":http://www.vim.org/scripts/script.php?script_id=2386 - support to close Ruby blocks such as 'if', 'do' with 'end'
* "fugitive":http://www.vim.org/scripts/script.php?script_id=2975 - support for Git, adding convenient commands such as :Gstatus, :Gread, :Gmove
* "haml":http://www.vim.org/scripts/script.php?script_id=1773 - syntax highlight for HAML
* "html5.vim":https://github.com/othree/html5.vim - omnicomplete function and syntax for HTML5
* "javacomplete":http://www.vim.org/scripts/script.php?script_id=1785 - Omni Completion for JAVA
* "markdown":http://www.vim.org/scripts/script.php?script_id=1242 - syntax highlight for Markdown
* "matchit":http://www.vim.org/scripts/script.php?script_id=39 - extended % matching for HTML, LaTeX, and many other languages
* "NERD_commenter":http://www.vim.org/scripts/script.php?script_id=1218 - support to comment lines of code
* "NERD_tree":http://www.vim.org/scripts/script.php?script_id=1658 - project pane that you can open with [leader] p
* "ragtag":http://www.vim.org/scripts/script.php?script_id=1896 - easier way to create tags for html, erb, etc
* "rails":http://www.vim.org/scripts/script.php?script_id=1567 - lot's of tools to make it easier to manage your Rails projects
* "snipmate":https://github.com/akitaonrails/snipmate.vim - support for textmate-like snippets for several languages
* "supertab":http://www.vim.org/scripts/script.php?script_id=1643 - pseudo auto-complete with tab
* "surround":http://www.vim.org/scripts/script.php?script_id=1697 - add, change, remove surrounding parentheses, brackets, quotes, etc
* "syntastic":http://www.vim.org/scripts/script.php?script_id=2736 - checks for syntax errors in many languages
* "taglist":https://github.com/vim-scripts/taglist.vim - Source code browser (supports C/C++, java, perl, python, tcl, sql, php, etc)
* "textile":http://www.vim.org/scripts/script.php?script_id=2305 - syntax highlight for Textile
* "yankring":https://github.com/vim-scripts/YankRing.vim - Maintains a history of previous yanks, changes and deletes
* "vim-bundler":https://github.com/tpope/vim-bundler - Bundler support for Vim
* "vim-coffee-script":https://github.com/kchmck/vim-coffee-script - syntax highlight for Coffee Script
* "vim-easymotion":http://www.vim.org/scripts/script.php?script_id=3526 - Vim motions on speed!
* "vim-jade":https://github.com/statianzo/vim-jade - Vim syntax highlighting for the Jade templating engine
* "vim-jquery":https://github.com/itspriddle/vim-jquery - Vim syntax file to add some colorations for jQuery keywords and css selectors
* "vim-preview":http://www.vim.org/scripts/script.php?script_id=3344 - [leader] P previews Markdown, Rdoc, Textile, html. Requires Ruby and other gems.
* "vim-ruby-sinatra":https://github.com/hallison/vim-ruby-sinatra - syntax highlight for Sinatra
* "vim-ruby":https://github.com/vim-ruby/vim-ruby/wiki - syntax highlight, smart identation, auto-complete for Ruby
* "vim-rvm":https://github.com/tpope/vim-rvm - RVM support for Vim
* "vim-textobj-rubyblock":http://vimcasts.org/blog/2010/12/a-text-object-for-ruby-blocks/ - smart block selection in Ruby code
* "vjde":http://www.vim.org/scripts/script.php?script_id=1213 - Vim - Just a Development Envirement (Java/C++)
* "vividchalk":http://www.vim.org/scripts/script.php?script_id=1891 - color scheme inspired by the classic Vibrant for Textmate
* "Zencoding":http://www.vim.org/scripts/script.php?script_id=2981 - powerful way for HTML abbreviations (learn here: http://code.google.com/p/zen-coding/). Type abbreviation and press Ctrl+Y+comma (c-y ,)

h1. Usage

Troubleshoot: Because of the large amount of submodules, if you ever have any
trouble after pulling from the repository, it will be easier to just back up
your old .vim folder and just git clone a new version.

Clone this repo into your home directory either as .vim (linux/mac) or
vimfiles (Windows). Such as:

<pre><code>
git clone git://github.com/s90198123/vimfiles.git ~/.vim
</pre></code>

Then 'cd' into the repo and run this to get the snippets submodule:

<pre><code>
git submodule update --init
</code></pre>

Now you should create a new <tt>.vimrc</tt> file in your home directory that
loads the pre-configured one that comes bundled in this package. You can do it
on Linux/Mac like this:

<pre><code>
echo "source ~/.vim/vimrc" > ~/.vimrc
</code></pre>

On Windows you should create a <tt>_vimrc</tt> (underline instead of dot) and add
the following line inside:

<pre><code>
source ~/vimfiles/vimrc
</code></pre>

This way you can override the default configuration by adding your own inside
this file.

You should also create a new <tt>.gvimrc</tt> file in your home directory. You can do
it on Linux/Mac like this:

<pre><code>
echo "source ~/.vim/gvimrc" > ~/.gvimrc
</code></pre>

On Windows you should create a <tt>_gvimrc</tt> (underline instead of dot) and add
the following line inside:

<pre><code>
source ~/vimfiles/gvimrc
</code></pre>

This way you can override the default GUI configuration by adding your own inside
this file.

h1. Help Tags

At first usage of vim, type ":" while in command mode and execute:

  call pathogen#helptags()

This will make the plugins documentations available upon :help

h1. Dependencies

You will need these dependencies figured out:

* Ruby (for the fuzzy finder plugin)
* Exuberant Ctags (http://ctags.sourceforge.net/)
* Ncurses-term (in Linux only)

In Ubuntu, for example, you will have to do:

<pre><code>
apt-get install exuberant-ctags ncurses-term
</code></pre>

In OS X, you can install ctags with homebrew

<pre><code>
brew install ctags
</code></pre>

On Windows you have to download Ctags and add ctags.exe in your PATH.

Mac OS X and most Linux distros come with Ruby already. If you're in Windows
look for Luis Lavena's latest Ruby Installer (http://rubyforge.org/projects/rubyinstaller/)

h1. IMPORTANT: Command-T

The latest version replaces the old Fuzzy Finder with a new one called
"Command-T" form wincent.com. I've replaced the old "Command-T" key
binding that used to open new tabs and assigned it to this new plugin
so it behaves the same as Textmate.

You may have problems in Mac/Linux because this plugin requires a native
extension, so you will have to do this:

<pre><code>
rvm use system # use this line if using rvm
cd ~/.vim/bundle/Command-T/ruby/command-t
ruby extconf.rb
make
</code></pre>

This means that you need to have your Ruby source files and GCC also
installed. A binary for Windows is already bundled so it should just
work. I've also included a binary compiled for Ruby Enterprise Edition,
but if you are using other Ruby distros, you will need to recompile.

There are binaries for Mac and Windows. The Mac version is compiled
against the default system Ruby for Mac OS X 10.6.5. The Windows version
is compiled against Ruby Installer 1.8.7-p330.

h2. Ubuntu 11.04 and/or Vim 7.3.35

Ubuntu 11.04 comes bundled with Vim 7.3.35, which has "flaky" Ruby support.
Even if you do everything right, you might see the following crashes when
trying to use Command-T:

<pre><code>
Vim: Caught deadly signal SEGV
Vim: Finished.

Segmentation fault
</code></pre>

If this happens to you, update Vim to 7.3.154:

<pre><code>
hg clone https://vim.googlecode.com/hg/ ~/vim
cd ~/vim
hg update -C v7-3-154
./configure --enable-rubyinterp --with-features=huge --enable-gui=gnome2
make
sudo make install
</code></pre>

More details can be found "here":http://kresimirbojcic.com/2011/05/14/installing-command-t-ubunutu-11.04-ruby-1.9.2.html
Note that the options '--with-features=huge --enable-gui=gnome2' are not mentioned on the post above but they are necessary to also update the graphical version of vim (gvim).

h1. IMPORTANT: Autojump.vim

see "https://github.com/joelthelion/autojump/wiki":https://github.com/joelthelion/autojump/wiki to install native support,

and see "https://github.com/trotter/autojump.vim":https://github.com/trotter/autojump.vim to install in vim

h1. INSTALL & UPGRADE PLUGIN BUNDLES

All plugins were checked out as git submodules, which can be upgraded with git pull. For example, to upgrade Command-T

<pre><code>
cd ~/.vim/bundle/command-t
git pull
</code></pre>

To install a new plugin as a git submoudle, type the followin commands.

<pre><code>
cd ~/.vim
git submodule add [GIT-REPOSITORY-URL] bundle/[PLUGIN-NAME]
</code></pre>

reference "vgod's vimrc":https://github.com/vgod/vimrc

h1. Customize Vim leader key

set leader key from <code>\</code> to <code>,</code>

h1. Make Function Key more convenient

<code><F5></code>:NERDTREE
<code><F6></code>:TlistToggle
<code><F7></code>:bnext (origin: <code><leader>bn</code>)
<code><F8></code>:bprev (origin: <code><leader>bp</code>)
<code><F9></code>:YRShow
<code><F10></code>:YRSearch

h1. Add Snippets

h2. Where is the snippets?

<pre><code>
~/.vim/snippets
</code></pre>

h2. How can i create a snippets?

there is two way to create.

1. ~/.vim/snippets/{filetype}/{shortcut}.snippet - first, find or create the directory naming by file type in ~/.vim/snippets (ex. ~/.vim/snippets/html), second, create the snippets naming by shortcut name (ex. ~/.vim/snippets/html/div.snippet), finally, put the snippet text in here.
<pre><code>
<div id="${1: default}">${2}</div>
</code></pre>

2. ~/.vim/snippets/{filetype}.snippets - put the snippet text in this file, the syntax like

<pre><code>
snippet div
    <div id="${1: default}">
        ${2}
    </div>
</code></pre>

you can reference more in ~/.vim/snippets/

h1. Completion

h2. File Completion

use <code><C-f></code> to do file-completion (origin is <code><C-x><C-f></code>)

h2. Omni Completion

HTML, Javascript, CSS: use <code><tab></code> to do omni-completion. (see next for java)

h2. Java-Completion Support

use <code><tab></code> to do keyword / auto completion. (only java-base api, by plugin/vjde)

use <code><C-o></code> to do omni completion. (by plugin/javacomplete, origin is <code><C-x><C-o></code>)

h1. Play! Framework Support

type <code><m><tab></code> will generate model

<pre><code>
package models;

import java.util.*;
import javax.persistence.*;

import play.db.jpa.*;
import play.data.validation.*;

@Entity
public class User extends Model {
    public String name;
}
</code></pre>

type <code><c><tab></code> will generate controller


<pre><code>
package controllers;

import play.*;
import play.mvc.*;
import play.data.validation.*;

import java.util.*;

import models.*;

public class Users extends Controller {

    public static void index() {
	render();
    }
}
</code></pre>

more info in ~/.vim/snippets/java.snippets , ~/.vim/snippets/html.snippets

h1. Learn Vim

Visit the following sites to learn more about Vim:

* "Vimcasts":http://vimcasts.org

* "Learn Vim Progressively":http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/

* "Learn Vim Progressively for CN":http://coolshell.cn/articles/5426.html

* "Search and replace for CN":http://greenisland.csie.nctu.edu.tw/wp/2005/09/02/302/

* "Vim Introduction and Tutorial":http://blog.interlinked.org/tutorials/vim_tutorial.html

There are many sites teaching Vim, if you know of any other that are easy
to follow for newcomers, let me know.

h1. Cheat Sheet

"http://blog.vgod.tw/2009/12/08/vim-cheat-sheet-for-programmers/":http://blog.vgod.tw/2009/12/08/vim-cheat-sheet-for-programmers/

"http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html":http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html

h1. TODO

"https://github.com/carlhuda/janus":https://github.com/carlhuda/janus

"https://github.com/vgod/vimrc":https://github.com/vgod/vimrc

h1. Credits

* Original project and most of the heavy lifting: @scrooloose
* All the cool plugins for Rails, Cucumber and more: @timpope
* Great Command-T plugin by: Wincent
* Hacks and some snippets: @akitaonrails
